x-environment-defaults: &environment-defaults
  dockerenv: 'True'
  DEBUG: 'False'
  DB_NAME: 'webapp'
  DB_USER: 'webapp'
  DB_PASSWORD: 'webapp'
  DB_HOST: 'postgres'
  DB_PORT: 5432
  CELERY_BROKER_URL: 'redis://redis:6379/' # 'amqp://localhost:5672/'
  CELERY_RESULT_BACKEND: 'redis://redis:6379/'
  REDIS_HOST: 'redis'
  REDIS_PORT: '6379'
  REDIS_URL: 'redis://redis:6379'

  # You need to fill in or you can use .env
  RESULT_HOST: 'localhost:8000'
  # SECRET_KEY: 'secret'
  # EMAIL_HOST_USER: 'example@example.com'
  # EMAIL_HOST_PASSWORD: 'example'
  # SOCIAL_AUTH_GITHUB_KEY: ''
  # SOCIAL_AUTH_GITHUB_SECRET: ''
  # SOCIAL_AUTH_GOOGLE_OAUTH2_KEY: ''
  # SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET: ''




services:
  redis:
    image: redis:latest
    ports:
      - '6380:6379'

  # rabbitmq:
  #   image: rabbitmq:latest
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=autosubtitles
  #     - RABBITMQ_DEFAULT_PASS=autosubtitles
  #   ports:
  #     - '5672:5672'

  postgres:
    image: postgres:latest
    ports:
      - '5432:5432'
    # volumes:
    #   - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: webapp
      POSTGRES_USER: webapp
      POSTGRES_PASSWORD: webapp
  

  help:
    build:
      context: ./help
    environment:
      <<: *environment-defaults
    ports:
    - '8001:8000'
    # volumes:
      # - static_volume:/subs/auto_subs/static
    depends_on:
      - postgres


  webapp:
    build:
      context: ./
    # command: bash -c 'python3 ./auto_subs/manage.py makemigrations && python3 ./auto_subs/manage.py migrate && python3 ./auto_subs/manage.py runserver 0.0.0.0:8000'
    # command: ['python3', './auto_subs/manage.py', 'runserver', '0.0.0.0:8000']
    # command: bash -c 'cd ./ClinicProject && gunicorn ClinicProject.wsgi:application --bind 0.0.0.0:8000'
    env_file:
      - .env
    environment:
      <<: *environment-defaults
    ports:
    - '8000:8000'
    volumes:
      # - ./auto_subs/db.sqlite3:/subs/db.sqlite3
      - ./auto_subs/media:/subs/auto_subs/media
      - ./policy.xml:/etc/ImageMagick-6/policy.xml
      # - .:/subs/
      - static_volume:/subs/auto_subs/static
    depends_on:
      - postgres
      - redis
      - help
  
  worker:
    build:
      context: ./
    # command: ['. /subs/wait-for-postgres.sh', 'celery', '--workdir=./auto_subs', '-A', 'auto_subs', 'worker', '--loglevel=INFO']
    command: bash -c '. /subs/wait-for-postgres.sh && celery --workdir=./auto_subs -A auto_subs worker --loglevel=INFO' 
    env_file:
      - .env
    environment:
      <<: *environment-defaults
    volumes:
      # - ./auto_subs/db.sqlite3:/subs/db.sqlite3
      - ./auto_subs/media:/subs/auto_subs/media
      - ./policy.xml:/etc/ImageMagick-6/policy.xml
      # - .:/subs/
    depends_on:
      - postgres
      - redis
      - help

  nginx:
    image: nginx:latest
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
    ports:
      - '1337:80'
    depends_on:
      - webapp

volumes:
  static_volume:
  # pgdata:

